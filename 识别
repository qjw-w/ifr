# 红外RGB565跟踪示例

#

# 这个例子展示了使用OpenMV Cam进行红外RGB565跟踪。



import sensor, image, time

from pyb import UART

import json



thresholds = (100, 100, 0, 0, 0, 0) # thresholds for bright white light from IR.



sensor.reset()

sensor.set_pixformat(sensor.RGB565)

sensor.set_framesize(sensor.VGA)

sensor.set_windowing((240, 240)) # 240x240 center pixels of VGA

sensor.skip_frames(time = 2000)

sensor.set_auto_gain(False) # must be turned off for color tracking

sensor.set_auto_whitebal(False) # must be turned off for color tracking

clock = time.clock()

uart = UART(3, 115200)

# 只有比“pixel_threshold”多的像素和多于“area_threshold”的区域才被

# 下面的“find_blobs”返回。 如果更改相机分辨率，

# 请更改“pixels_threshold”和“area_threshold”。 “merge = True”合并图像中所有重叠的色块。



while(True):

    clock.tick()

    img = sensor.snapshot().binary([thresholds], invert=True, zero=True)
    
    blobs=img.find_blobs([thresholds], pixels_threshold=200, area_threshold=200, merge=True)
    
    if blobs:
    
           output_str = json.dumps(blobs)

           for blob in blobs:

        #  ratio = blob.w() / blob.h()

        #  if (ratio >= 0.5):and (ratio <= 3): # filter out non-squarish 
            

                img.draw_rectangle(blob.rect(),color=(255,0,0))
                
                output_str="[%d,%d]" % (blob.cx(),blob.cy())

                print('you send:',output_str)
            
                uart.write(output_str+'\n')
                
                print(clock.fps())

            #img.draw_cross(blob.cx(), blob.cy())
    else:
    
                print('not found!')

    


